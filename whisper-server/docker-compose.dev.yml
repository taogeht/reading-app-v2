# Development Docker Compose
# Fast builds with volume mounts for instant code changes
# Build time: ~30 seconds after initial setup

version: '3.8'

services:
  whisper-server:
    build:
      context: .
      dockerfile: Dockerfile.optimized
      target: development  # Use development stage
    container_name: whisper-speech-server-dev
    restart: unless-stopped
    
    # Port mapping
    ports:
      - "8000:8000"
    
    # Environment variables
    environment:
      - WHISPER_MODEL=base
      - PYTHONUNBUFFERED=1
      - TZ=America/New_York
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - DEBUG=1
    
    # Volume mounts for instant code changes
    volumes:
      # Mount source code for instant updates (no rebuild needed)
      - ./app:/app:Z
      
      # Persistent model cache
      - whisper_models_dev:/root/.cache/whisper
      
      # Logs accessible from host
      - ./logs:/app/logs:Z
      
      # Temporary uploads
      - /tmp/whisper-uploads:/app/uploads:Z
    
    # Resource limits (lighter for development)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    networks:
      - whisper-network-dev
    
    depends_on:
      - redis

  # Single Celery Worker for development
  whisper-worker:
    build:
      context: .
      dockerfile: Dockerfile.optimized
      target: development
    container_name: whisper-celery-worker-dev
    restart: unless-stopped
    
    # Worker command with auto-reload
    command: sh -c "cd /app && PYTHONPATH=/app watchmedo auto-restart --directory=/app --pattern='*.py' --recursive -- celery -A celery_app worker --loglevel=info --concurrency=1 --queues=audio_processing,batch_processing,default"
    
    # Environment variables
    environment:
      - WHISPER_MODEL=base
      - PYTHONUNBUFFERED=1
      - TZ=America/New_York
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - DEBUG=1
    
    # Mount source code for instant updates
    volumes:
      - ./app:/app:Z
      - whisper_models_dev:/root/.cache/whisper
      - ./logs:/app/logs:Z
      - /tmp/whisper-uploads:/app/uploads:Z
    
    # Lighter resources for development
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    
    networks:
      - whisper-network-dev
    
    depends_on:
      - redis

  # Redis for job queue
  redis:
    image: redis:7-alpine
    container_name: whisper-redis-dev
    restart: unless-stopped
    
    ports:
      - "6379:6379"
    
    volumes:
      - whisper_redis_data_dev:/data
    
    # Redis configuration for development
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --save 60 1000
    
    networks:
      - whisper-network-dev

# Named volumes for development
volumes:
  whisper_models_dev:
    driver: local
  
  whisper_redis_data_dev:
    driver: local

# Development network
networks:
  whisper-network-dev:
    driver: bridge