# Optimized Multi-Stage Dockerfile for Whisper Server
# This version caches dependencies separately from application code
# Build time: ~5 minutes first time, ~30 seconds for code changes

# Stage 1: Base system with dependencies (rarely changes)
FROM python:3.11-slim as base

# Set environment variables for the entire build
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Install system dependencies (cached unless this layer changes)
RUN apt-get update && apt-get install -y \
    ffmpeg \
    git \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app directory and user (cached)
RUN useradd -m -u 1000 whisper && \
    mkdir -p /app /app/logs /app/uploads && \
    chown -R whisper:whisper /app

WORKDIR /app

# Stage 2: Python dependencies (only rebuilds when requirements.txt changes)
FROM base as dependencies

# Copy only requirements first (for better caching)
COPY requirements.txt .

# Install Python dependencies with cache mount
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Pre-download Whisper models to cache them (optional - uncomment if desired)
# RUN python -c "import whisper; whisper.load_model('base')"

# Stage 3: Application code (rebuilds when Python files change)
FROM dependencies as application

# Set proper ownership for whisper user
USER whisper

# Copy application code (this layer rebuilds when code changes)
COPY --chown=whisper:whisper app/ /app/

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command (can be overridden in docker-compose)
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]

# Stage 4: Development version with debugging tools (optional)
FROM application as development

USER root

# Install development tools
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir \
    ipython \
    debugpy \
    pytest \
    watchdog[watchmedo]

USER whisper

# Development command with auto-reload
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--workers", "1"]